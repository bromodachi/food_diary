{
  "info": {
    "_postman_id": "c30eb573-3b31-4afc-9a6b-9ecc31bfaf82",
    "name": "Food Diary",
    "description": "# ðŸš€ Food Diary\n\nAll the available apis for the simple Food Diary web application!\n\nAll the varaiables you need are already set but, if for some reason it's not set, the minimum you need is the variable `base_url`. The value should be [<code>http://localhost:3000</code>](http://localhost:3000) or whatever port you've chagned it to.\n\n## Note\n\nThe PATCH and DELETE API sets the ID to 2. However, you should replace that id with whatever the id was returned in POST.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "33955563"
  },
  "item": [
    {
      "name": "Get Entries",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/v1/diary/entries?start=2024-09-15&end=2024-12-26",
          "host": ["{{base_url}}"],
          "path": ["v1", "diary", "entries"],
          "query": [
            {
              "key": "start",
              "value": "2024-09-15"
            },
            {
              "key": "end",
              "value": "2024-12-26"
            }
          ]
        },
        "description": "You must pass the `start` and `end` params. These must be values that a string value a date object can take in.\n\nExample:\n\nstart: `2024-09-15`\n\nend: `2024-09-21`\n\nDates must be in the format of: `YYYY-MM-DD`"
      },
      "response": []
    },
    {
      "name": "Create entries",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"date\": \"2024-10-15\",\n    \"meal\": \"lunch\",\n    \"entries\": [\"sausage\", \"eggs\"]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/v1/diary/entries",
          "host": ["{{base_url}}"],
          "path": ["v1", "diary", "entries"]
        },
        "description": "To create an entry, you must send a POST with the data. \"date\", \"meal\", \"entries\".\n\n| **body param name** | **type** | **example value** |\n| --- | --- | --- |\n| date | string. Must be in the format `YYYY-MM-DD` | `2024-10-24` |\n| meal | string | `lunch` |\n| entries | string\\[\\] | `[\"eggs\"]` |\n\nAll available meal type:\n\n- breakfast\n    \n- lunch\n    \n- dinner\n    \n- snacks\n    \n- drinks"
      },
      "response": []
    },
    {
      "name": "Update entries",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful PUT request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"meal\": \"dinner\",\n    \"entries\": [\"steak\"]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/v1/diary/entries/8",
          "host": ["{{base_url}}"],
          "path": ["v1", "diary", "entries", "8"]
        },
        "description": "`http://localhost:3000/v1/diary/entries/:id`\n\nOnce you've created an id or know the ID of a previous entry, you can update the entry. Currently, we only accept patch requests(only update a portion of the entries for a meal). However, any entry for that meal will be replaced by the entries you passed.\n\n| **body param name** | **type** | **example value** |\n| --- | --- | --- |\n| meal | string | `lunch` |\n| entries | string\\[\\] | `[\"eggs\"]` |\n\nAll available meal type:\n\n- breakfast\n    \n- lunch\n    \n- dinner\n    \n- snacks\n    \n- drinks"
      },
      "response": []
    },
    {
      "name": "delete entries",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful DELETE request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/v1/diary/entries/8",
          "host": ["{{base_url}}"],
          "path": ["v1", "diary", "entries", "8"]
        },
        "description": "`http://localhost:3000/v1/diary/entries/:id`\n\nIf you want to delete all entries for a particular day, you must pass the id of that day.\n\nThe result will be empty but the status code will be 204."
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000"
    }
  ]
}
